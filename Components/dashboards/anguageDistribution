import React from "react";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Globe } from "lucide-react";
import { Skeleton } from "@/components/ui/skeleton";

export default function LanguageDistribution({ conversations, isLoading }) {
  if (isLoading) {
    return (
      <Card className="bg-white/80 backdrop-blur-sm border-slate-200/60 shadow-sm">
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <Globe className="w-5 h-5 text-blue-600" />
            Language Distribution
          </CardTitle>
        </CardHeader>
        <CardContent>
          <div className="space-y-4">
            {Array(5).fill(0).map((_, index) => (
              <div key={index} className="flex items-center justify-between">
                <Skeleton className="h-4 w-20" />
                <Skeleton className="h-4 w-10" />
              </div>
            ))}
          </div>
        </CardContent>
      </Card>
    );
  }

  const languageData = conversations.reduce((acc, conv) => {
    acc[conv.language] = (acc[conv.language] || 0) + 1;
    return acc;
  }, {});

  const sortedLanguages = Object.entries(languageData)
    .sort(([,a], [,b]) => b - a)
    .slice(0, 8);

  const total = conversations.length;

  return (
    <Card className="bg-white/80 backdrop-blur-sm border-slate-200/60 shadow-sm">
      <CardHeader>
        <CardTitle className="flex items-center gap-2">
          <Globe className="w-5 h-5 text-blue-600" />
          Language Distribution
        </CardTitle>
      </CardHeader>
      <CardContent>
        {total > 0 ? (
          <div className="space-y-4">
            {sortedLanguages.map(([language, count], index) => {
              const percentage = ((count / total) * 100).toFixed(1);
              const colors = [
                'bg-blue-100 text-blue-800 border-blue-200',
                'bg-green-100 text-green-800 border-green-200',
                'bg-purple-100 text-purple-800 border-purple-200',
                'bg-orange-100 text-orange-800 border-orange-200',
                'bg-pink-100 text-pink-800 border-pink-200',
                'bg-yellow-100 text-yellow-800 border-yellow-200',
                'bg-indigo-100 text-indigo-800 border-indigo-200',
                'bg-cyan-100 text-cyan-800 border-cyan-200'
              ];
              
              return (
                <div key={language} className="flex items-center justify-between">
                  <div className="flex items-center gap-3">
                    <Badge 
                      variant="secondary" 
                      className={`${colors[index % colors.length]} border text-xs`}
                    >
                      {language}
                    </Badge>
                  </div>
                  <div className="flex items-center gap-2">
                    <span className="text-sm text-slate-600">{count}</span>
                    <span className="text-xs text-slate-500">({percentage}%)</span>
                  </div>
                </div>
              );
            })}
          </div>
        ) : (
          <p className="text-center text-slate-500 py-8">No data available</p>
        )}
      </CardContent>
    </Card>
  );
}